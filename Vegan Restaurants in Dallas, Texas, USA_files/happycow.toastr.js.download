/*
 * Copyright (C) HappyCow - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 */

var HappycowToastr = (function () {
    const CLASS_NAME_TOASTIFY_HC = 'toastify-hc';
    const CLASS_NAME_TOASTIFY_HC_CONTENT = 'toastify-hc-content';

    const defaultOptions = {
        duration: 2500,
        gravity: 'bottom',
        position: 'center',
        backgroundColor: 'white',
        className: CLASS_NAME_TOASTIFY_HC,
        offset: {
            y: 25,
        },
    };

    const toastrErrorTemplate = (msg) => `
        <svg class="h-5 w-5 md:h-6 md:w-6 text-red-500" viewBox="0 -960 960 960" xmlns="http://www.w3.org/2000/svg" fill="currentColor">
            <path d="M111.63-115.935q-12.673 0-22.89-6.289-10.216-6.289-15.892-16.58Q67.13-149 66.63-160.958t6.218-23.346L440.217-820q6.718-11.435 17.557-17.033 10.84-5.597 22.251-5.597 11.41 0 22.225 5.597 10.815 5.598 17.533 17.033l367.369 635.696q6.718 11.388 6.218 23.346t-6.218 22.154q-5.717 10.195-15.913 16.532-10.196 6.337-22.869 6.337H111.63Zm72.348-87.413h592.044L480-713.304 183.978-203.348ZM480-240.717q17.239 0 29.217-11.979 11.979-11.978 11.979-29.217 0-17.239-11.979-29.098Q497.239-322.87 480-322.87q-17.239 0-29.217 11.859-11.979 11.859-11.979 29.098 0 17.239 11.979 29.217 11.978 11.979 29.217 11.979ZM480-360q17 0 28.5-11.5T520-400v-117.37q0-17-11.5-28.5t-28.5-11.5q-17 0-28.5 11.5t-11.5 28.5V-400q0 17 11.5 28.5T480-360Zm0-98.326Z"/>
        </svg>
        <span>${msg}</span>
    `;

    const toastrSuccessTemplate = (msg) => `
        <svg class="h-5 w-5 text-green-500 md:h-6 md:w-6" viewBox="0 -960 960 960" xmlns="http://www.w3.org/2000/svg" fill="currentColor">
            <path d="M423.283-416.37 343.5-496.152q-12.435-12.435-31.348-12.435-18.913 0-31.348 12.435-12.434 12.435-12.315 31.348.12 18.913 12.554 31.348l110.174 110.173q13.761 13.674 32.109 13.674 18.348 0 32.022-13.674l222.413-222.413q12.435-12.434 12.435-31.228 0-18.793-12.435-31.228-12.435-12.435-31.348-12.435-18.913 0-31.348 12.435L423.283-416.37ZM480-71.87q-84.913 0-159.345-32.117-74.432-32.118-129.491-87.177-55.059-55.059-87.177-129.491Q71.869-395.087 71.869-480t32.118-159.345q32.118-74.432 87.177-129.491 55.059-55.059 129.491-87.177Q395.087-888.131 480-888.131t159.345 32.118q74.432 32.118 129.491 87.177 55.059 55.059 87.177 129.491Q888.131-564.913 888.131-480t-32.118 159.345q-32.118 74.432-87.177 129.491-55.059 55.059-129.491 87.177Q564.913-71.869 480-71.869Z"/>
        </svg>
        <span>${msg}</span>
    `;

    class Toastr {
        constructor(options = {}) {
            this._currentToastr = null;
            this._options = Object.assign(cloneObj(defaultOptions), options);
        }

        basic(msg, template = '') {
            this.hideCurrentToastr();

            if (template) {
                const html = document.createElement('div');
                html.classList.add(CLASS_NAME_TOASTIFY_HC_CONTENT, 'flex', 'items-center', 'space-x-2', 'md:space-x-3');
                html.insertAdjacentHTML('beforeend', template);
                this._options.node = html;
                this._currentToastr = Toastify(this._options).showToast();
                return;
            }

            this._options.text = msg;
            this._options.onClick = () => this.hideCurrentToastr();
            this._currentToastr = Toastify(this._options).showToast();
        }

        error(msg) {
            this.hideCurrentToastr();

            const html = document.createElement('div');
            html.classList.add(CLASS_NAME_TOASTIFY_HC_CONTENT, 'flex', 'items-center', 'space-x-2');
            html.insertAdjacentHTML('beforeend', toastrErrorTemplate(msg));

            this._options.node = html;
            this._options.onClick = () => this.hideCurrentToastr();
            this._currentToastr = Toastify(this._options).showToast();
        }

        success(msg) {
            this.hideCurrentToastr();

            const html = document.createElement('div');
            html.classList.add(CLASS_NAME_TOASTIFY_HC_CONTENT, 'flex', 'items-center', 'space-x-1.5');
            html.insertAdjacentHTML('beforeend', toastrSuccessTemplate(msg));

            this._options.node = html;
            this._options.onClick = () => this.hideCurrentToastr();
            this._currentToastr = Toastify(this._options).showToast();
        }

        custom(template, customOptions = this._options) {
            const html = document.createElement('div');
            const options = Object.assign(cloneObj(defaultOptions), customOptions);
            html.insertAdjacentHTML('beforeend', template);
            options.node = html;
            this._currentToastr = Toastify(options).showToast();
        }

        hideCurrentToastr() {
            if (this._currentToastr) {
                this._currentToastr.hideToast();
            }
        }
    }

    return new Toastr();
})();
